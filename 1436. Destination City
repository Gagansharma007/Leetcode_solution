// You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi.
// Return the destination city, that is, the city without any path outgoing to another city.

// It is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.

class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        set<string> myset;
        int i;
        for(i = 0 ; i < paths.size() ; i++ )
            myset.insert(paths[i][1]);
        for(i = 0 ; i < paths.size() ; i++ ){
            if(myset.find(paths[i][0]) != myset.end())
            myset.erase(paths[i][0]);
        }
        return *myset.begin();
    }
};
